<div class="container">
    <div class="py-5 d-flex justify-content-center">
        <div class="col-md-10">
            <h1>Desafío sobre la accesibilidad en los textos</h1>
        </div>
        <div class="col-md-2 p-1">
            <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#exampleModal">
                ¿Necesitas ayuda?
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="div" id="timer-container"></div>
        </div>
        <div class="col-md-4">
            <div class="div" id="score-container"></div>
        </div>
        <div class="col-md-4">
            <p id="highscore">Máxima puntuación: {{highscore}}</p>
        </div>
    </div>
    <div class="row">
        <h5>En el siguiente texto hay Información de vital importancia para los usuarios, pero se encuentra en una
            fuente tan pequeña que es imposible de leer.
            Implementa una solución para que los usuarios puedan leer el texto con facilidad.
        </h5>
        <div class="row">
            <hr class="my-4">
        </div>
        <div class="col-md-6">
            <div id="original-text-container">
                <p id="original-text" style="font-size: 6px;">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla quam velit, vulputate eu pharetra
                    nec, mattis ac neque. Duis vulputate commodo lectus, ac blandit elit tincidunt id. Sed rhoncus,
                    tortor sed eleifend tristique, tortor mauris molestie elit, et lacinia ipsum quam nec dui. Quisque
                    nec mauris sit amet elit iaculis pretium sit amet quis magna. Aenean velit odio, elementum in tempus
                    ut, vehicula eu diam. Pellentesque rhoncus aliquam mattis. Ut vulputate eros sed felis sodales nec
                    vulputate justo hendrerit. Vivamus varius pretium ligula, a aliquam odio euismod sit amet. Quisque
                    laoreet sem sit amet orci ullamcorper at ultricies metus viverra. Pellentesque arcu mauris,
                    malesuada quis ornare accumsan, blandit sed diam.
                </p>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <ul>
                    <li>
                        <h5>Reglas del desafío</h5>
                    </li>
                    <li>Debes cambiar el tamaño de la fuente del texto para que sea legible.</li>
                    <li>El tamaño de la fuente debe ser un número entero.</li>
                </ul>
            </div>
            <div class="row">
                <p id="resultado"></p>
                <form id="formSize">
                <label>Introduce el nuevo tamaño de la fuente aquí</label>
                <input id="ogInput" type="text" class="form-control">
                <button class="btn btn-primary my-2">Aplicar Tamaño</button>
            </form>
            </div>
        </div>
    </div>
    <div class="row">
        <hr class="my-4">
    </div>
</div>


<!-- Modal -->

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Información útil</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h2>Accesibilidad del tamaño del texto según las pautas de la WCAG</h2>
                <p>Las Pautas de Accesibilidad para el Contenido Web (WCAG) establecen recomendaciones para garantizar
                    que el contenido web sea accesible para todas las personas, incluyendo aquellas con discapacidades
                    visuales. En lo que respecta al tamaño del texto, las WCAG sugieren lo siguiente:</p>
                <ul>
                    <li><strong>Redimensionamiento de texto:</strong> El texto debe ser redimensionable hasta el 200%
                        sin necesidad de utilizar tecnología de asistencia, y sin que se pierda contenido o
                        funcionalidad (Criterio de éxito 1.4.4).</li>
                    <li><strong>Contraste de color:</strong> El texto y las imágenes de texto deben tener una relación
                        de contraste de al menos 4.5:1. Para el texto de gran tamaño (18 puntos o 14 puntos y en
                        negrita), la relación de contraste debe ser de al menos 3:1 (Criterio de éxito 1.4.3).</li>
                    <li><strong>Evitar el desbordamiento:</strong> Al aumentar el tamaño del texto, es importante
                        asegurarse de que no provoque un desbordamiento que oculte el contenido o interfiera con la
                        funcionalidad.</li>
                    <li><strong>Cambiar atributos en CSS:</strong> Recuerda que para cambiar el tamaño de la fuente usando CSS; debes cambiar
                    el atributo font-size &lt;p style="font-size: Xpx;"&gt;&lt;/p&gt; </li>
                </ul>
                <p>En este desafío, debes asegurarte de que el tamaño del texto en tu página web cumple con estas pautas
                    de accesibilidad.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>

            </div>
        </div>
    </div>


</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
    integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
    crossorigin="anonymous"></script>

<script>

    var challenges = [
        '/challenges/contrastChallenge',
        '/challenges/contrastChallenge2',
        '/challenges/altChallenge',
        '/challenges/altChallenge2',
        '/challenges/structureChallenge',
        '/challenges/structureChallenge2',
        '/challenges/formChallenge',
        '/challenges/formChallenge2',
        '/challenges/keyboardChallenge',
        '/challenges/fontSizeChallenge',
    ];

    var playedChallenges = JSON.parse(localStorage.getItem('playedChallenges')) || [];

    document.getElementById('formSize').addEventListener('submit', function (event) {
        // Prevenir el comportamiento predeterminado del formulario
        event.preventDefault();
        alert('¡Desafío completado con éxito!');
        const input = document.getElementById('ogInput').value.trim();
        const newFontSize = parseInt(input);
        const regex = /<p style="font-size:\s*(\d+)px;">/;
        //const regex = /\d+/g;
        const match = input.match(regex);
        const originalText = document.getElementById('original-text');
        const newSize = match[1];
        alert(newSize);
        if (!isNaN(newSize)) {
            if (newSize < 12 || newSize > 24) {
                document.getElementById('resultado').innerHTML = "Por favor, introduce un número entre 12 y 24.";
                return;
            }
            originalText.style.fontSize = newSize + 'px';
            var newScore = obtenerPuntuación(timerValueWhenConditionMet);
            var currentScore = parseInt(localStorage.getItem('score'));
            var totalScore = currentScore + newScore;
            localStorage.setItem('score', totalScore);
            clearInterval(timerInterval);
            alert('¡Desafío completado con éxito! Con puntuación de ' + totalScore);

            if (!playedChallenges.includes(window.location.pathname)) {
                playedChallenges.push(window.location.pathname);
                localStorage.setItem('playedChallenges', JSON.stringify(playedChallenges));
            }
            if (playedChallenges.length < 1 && confirm('¿Quieres avanzar al siguiente desafío?')) {
                alert('Avanzando al siguiente desafío...');

                // Filtra los desafíos para excluir los que el usuario ya ha jugado
                var remainingChallenges = challenges.filter(challenge => !playedChallenges.includes(challenge));

                // Genera un número aleatorio entre 0 y el número de desafíos restantes
                var nextChallengeIndex = Math.floor(Math.random() * remainingChallenges.length);

                // Redirige al usuario al desafío seleccionado
                var nextChallenge = remainingChallenges[nextChallengeIndex];
                window.location.href = nextChallenge;
            } else {
                alert('Has jugado tres desafíos en esta partida. ¡Felicidades!');
                // Borra la lista de desafíos jugados
                playedChallenges = [];
                localStorage.removeItem('playedChallenges');
                if (totalScore > {{ highscore }} ) {
        fetch('/challenges/updateHighscore', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                highscore: totalScore,
            }),
        })
            .then(response => response.json())
            .then(data => {
                console.log('Highscore updated:', data);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }
        localStorage.setItem('score', 0);
        window.location.href = "/";
        }
        } else {
        document.getElementById('resultado').textContent = "Por favor, introduce un número válido.";
    }
    });

    var startTime, timerInterval, timerValueWhenConditionMet;

    function obtenerPuntuación(timerTriggered) {
        return Math.floor(1000 / timerTriggered);
    }

    function win() {

    }
    function obtenerPuntuación(timerTriggered) {
        return Math.floor(1000 / timerTriggered);
    }

    function updateTimer() {

        var currentTime = Date.now();
        var elapsedTime = Math.floor((currentTime - startTime) / 1000);
        timerValueWhenConditionMet = elapsedTime;


        document.getElementById("timer-container").innerText = 'Tiempo de partida: ' + elapsedTime + ' segundos';
    }
    document.getElementById("score-container").innerText = 'Puntuación: ' + localStorage.getItem('score');

    function startTimer() {
        // Guarda el tiempo de inicio
        startTime = Date.now();

        // Inicia el temporizador para que llame a updateTimer cada 1000 milisegundos (1 segundo)
        timerInterval = setInterval(updateTimer, 1000);
    }

    // Inicia el temporizador cuando se carga la página
    startTimer();
</script>