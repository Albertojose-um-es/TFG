<div class="container">
    <div class="row mt-5">
        <div class="col-md-6 offset-md-3">
            <h1 class="text-center mb-4">¡Bienvenido a Accesibility Fixer!</h1>
            <p class="lead">El objetivo de este juego es aprender sobre accesibilidad web mientras te diviertes. A
                continuación, encontrarás algunas reglas básicas:</p>
            <ul>
                <li>Completa cada desafío siguiendo las indicaciones proporcionadas.</li>
                <li>Intenta resolver los desafíos de la manera más accesible posible.</li>
                <li>Gana puntos por cada desafío completado correctamente.</li>
                <li>Cuanto menos tiempo tardes en resolver cada desafío mayor será tu puntuación.</li>
            </ul>
            <div id="highscore">
                Tu mejor puntuación fue {{highscore}} puntos.
            </div>
        </div>
        <div class="row mt-5 text-center py-3">
            <div class="col-md-6">
                <button onclick="play()" class="btn btn-primary w-50">Jugar</button>
            </div>
            <div class="col-md-6">
                <button onclick="highscores()" class="btn btn-secondary w-50">
                    Ver mejores puntajes
                </button>
            </div>
            
        </div>
    </div>
</div>

<div class="modal fade" id="rulesModal" tabindex="-1" role="dialog" aria-labelledby="rulesModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rulesModalLabel">Reglas del Juego</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <ul>
                    <li>Completa cada desafío siguiendo las indicaciones proporcionadas.</li>
                    <li>Intenta resolver los desafíos de la manera más accesible posible.</li>
                    <li>Gana puntos por cada desafío completado correctamente.</li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary w" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
    integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
    crossorigin="anonymous"></script>
<script>
    $(document).ready(function () {
            // Verificar el estado de inicio de sesión al cargar la página
            checkLoginStatus();
            // Función para verificar el estado de inicio de sesión
            function checkLoginStatus() {
                $.ajax({
                    url: '/checkLoginStatus', // Ruta en tu servidor para verificar el estado de inicio de sesión
                    method: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        if (response.loggedIn) {
                            // Si el usuario ha iniciado sesión, mostrar "Cerrar sesión" y ocultar "Iniciar sesión" y "Registrar usuario"
                            $('#highscore').show();
                        } else {
                            // Si el usuario no ha iniciado sesión, mostrar "Iniciar sesión" y "Registrar usuario" y ocultar "Cerrar sesión"
                            $('#highscore').hide();
                        }
                    }
                });
            }
        });
    var challenges = [
       /* '/challenges/contrastChallenge',
        '/challenges/contrastChallenge2',
        '/challenges/altChallenge',
        '/challenges/altChallenge2',
        '/challenges/structureChallenge',
        '/challenges/structureChallenge2',
        '/challenges/formChallenge',
        '/challenges/formChallenge2',
        '/challenges/keyboardChallenge2',*/
        '/challenges/keyboardChallenge',
    ];

    // Almacena los desafíos que el usuario ya ha jugado en el almacenamiento local
    var playedChallenges = [];
    if(!localStorage.getItem('score')){
        localStorage.setItem('score', 0);
    }
    
    function highscores() {
        window.location.href = '/challenges/highscore';
    }

    function play() {
        
        // Genera un número aleatorio entre 0 y el número de desafíos restantes
        var nextChallengeIndex = Math.floor(Math.random() * challenges.length);
        // Obtiene el siguiente desafío
        var nextChallenge = challenges[nextChallengeIndex];
        playedChallenges.push(nextChallenge);
        localStorage.setItem('score', 0);
        localStorage.setItem('playedChallenges', JSON.stringify(playedChallenges));
        window.location.href = nextChallenge;
    }
</script>